{"version":3,"file":"js/214.ee3a0d28.js","mappings":"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","sources":["webpack://chinese_myths/./src/views/backstage/UserManagement.vue","webpack://chinese_myths/src/views/backstage/UserManagement.vue","webpack://chinese_myths/./src/views/backstage/UserManagement.vue?1ad7","webpack://chinese_myths/./src/views/backstage/UserManagement.vue?a08e","webpack://chinese_myths/./src/api/services/backstage.services.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/bghome' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"用户管理\")]),_c('el-breadcrumb-item',[_vm._v(\"用户列表\")])],1),_c('el-card',[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":8}},[_c('el-input',{attrs:{\"placeholder\":\"请输入内容\",\"clearable\":\"\"},on:{\"clear\":_vm.getUserList},model:{value:(_vm.queryInfo.query),callback:function ($$v) {_vm.$set(_vm.queryInfo, \"query\", $$v)},expression:\"queryInfo.query\"}},[_c('el-button',{attrs:{\"slot\":\"append\",\"icon\":\"el-icon-search\"},on:{\"click\":_vm.searchList},slot:\"append\"})],1)],1),_c('el-col',{attrs:{\"span\":4}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.dialogVisible = true}}},[_vm._v(\"添加用户\")])],1)],1),_c('el-table',{attrs:{\"data\":_vm.userlist,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"#\",\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"label\":\"用户名\",\"prop\":\"username\"}}),_c('el-table-column',{attrs:{\"label\":\"邮箱\",\"prop\":\"email\"}}),_c('el-table-column',{attrs:{\"label\":\"电话\",\"prop\":\"phone\"}}),_c('el-table-column',{attrs:{\"label\":\"密码\",\"prop\":\"password\"}}),_c('el-table-column',{attrs:{\"label\":\"用户等级\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.role)?_c('el-tag',{staticClass:\"tag-width\",attrs:{\"type\":\"success\",\"effect\":\"dark\"}},[_vm._v(\"管理员\")]):_c('el-tag',{staticClass:\"tag-width\",attrs:{\"type\":\"info\",\"effect\":\"dark\"}},[_vm._v(\"普通用户\")])]}}])}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"120px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.showEditDialog({ ...scope.row })}}}),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.removeUserById(scope.row.uid)}}})]}}])})],1),_c('el-pagination',{attrs:{\"current-page\":_vm.queryInfo.pagenum,\"page-sizes\":[1, 2, 5, 10],\"page-size\":_vm.queryInfo.pagesize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1),_c('el-dialog',{attrs:{\"title\":\"添加用户\",\"visible\":_vm.dialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event},\"close\":_vm.addDialogClosed}},[_c('el-form',{ref:\"addFormRef\",attrs:{\"model\":_vm.addForm,\"rules\":_vm.addFormRules,\"label-width\":\"70px\"}},[_c('el-form-item',{attrs:{\"label\":\"用户名\",\"prop\":\"username\"}},[_c('el-input',{model:{value:(_vm.addForm.username),callback:function ($$v) {_vm.$set(_vm.addForm, \"username\", $$v)},expression:\"addForm.username\"}})],1),_c('el-form-item',{attrs:{\"label\":\"密码\",\"prop\":\"password\"}},[_c('el-input',{model:{value:(_vm.addForm.password),callback:function ($$v) {_vm.$set(_vm.addForm, \"password\", $$v)},expression:\"addForm.password\"}})],1),_c('el-form-item',{attrs:{\"label\":\"邮箱\",\"prop\":\"email\"}},[_c('el-input',{model:{value:(_vm.addForm.email),callback:function ($$v) {_vm.$set(_vm.addForm, \"email\", $$v)},expression:\"addForm.email\"}})],1),_c('el-form-item',{attrs:{\"label\":\"手机\",\"prop\":\"phone\"}},[_c('el-input',{model:{value:(_vm.addForm.phone),callback:function ($$v) {_vm.$set(_vm.addForm, \"phone\", $$v)},expression:\"addForm.phone\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addUser}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":\"修改用户\",\"visible\":_vm.editDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.editDialogVisible=$event}}},[_c('el-form',{ref:\"editFormRef\",attrs:{\"model\":_vm.editForm,\"rules\":_vm.editFormRules,\"label-width\":\"70px\"}},[_c('el-form-item',{attrs:{\"label\":\"用户名\"}},[_c('el-input',{model:{value:(_vm.editForm.username),callback:function ($$v) {_vm.$set(_vm.editForm, \"username\", $$v)},expression:\"editForm.username\"}})],1),_c('el-form-item',{attrs:{\"label\":\"密码\",\"prop\":\"password\"}},[_c('el-input',{model:{value:(_vm.editForm.password),callback:function ($$v) {_vm.$set(_vm.editForm, \"password\", $$v)},expression:\"editForm.password\"}})],1),_c('el-form-item',{attrs:{\"label\":\"邮箱\",\"prop\":\"email\"}},[_c('el-input',{model:{value:(_vm.editForm.email),callback:function ($$v) {_vm.$set(_vm.editForm, \"email\", $$v)},expression:\"editForm.email\"}})],1),_c('el-form-item',{attrs:{\"label\":\"手机号\",\"prop\":\"phone\"}},[_c('el-input',{model:{value:(_vm.editForm.phone),callback:function ($$v) {_vm.$set(_vm.editForm, \"phone\", $$v)},expression:\"editForm.phone\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.editUserInfo()}}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <!-- 面包屑导航区域 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/bghome' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 卡片视图区域 -->\n    <el-card>\n      <!-- 搜索与添加区域 -->\n      <el-row :gutter=\"20\">\n        <el-col :span=\"8\">\n          <el-input\n            placeholder=\"请输入内容\"\n            v-model=\"queryInfo.query\"\n            clearable\n            @clear=\"getUserList\"\n          >\n            <el-button\n              slot=\"append\"\n              icon=\"el-icon-search\"\n              @click=\"searchList\"\n            ></el-button>\n          </el-input>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"primary\" @click=\"dialogVisible = true\"\n            >添加用户</el-button\n          >\n        </el-col>\n      </el-row>\n\n      <!-- 用户列表区域 -->\n      <el-table :data=\"userlist\" border stripe>\n        <el-table-column label=\"#\" type=\"index\"></el-table-column>\n        <el-table-column label=\"用户名\" prop=\"username\"></el-table-column>\n        <el-table-column label=\"邮箱\" prop=\"email\"></el-table-column>\n        <el-table-column label=\"电话\" prop=\"phone\"></el-table-column>\n        <!-- <el-table-column label=\"昵称\" prop=\"realName\"></el-table-column> -->\n        <el-table-column label=\"密码\" prop=\"password\"></el-table-column>\n        <el-table-column label=\"用户等级\">\n          <template slot-scope=\"scope\">\n            <el-tag\n              class=\"tag-width\"\n              v-if=\"scope.row.role\"\n              type=\"success\"\n              effect=\"dark\"\n              >管理员</el-tag\n            >\n            <el-tag class=\"tag-width\" v-else type=\"info\" effect=\"dark\"\n              >普通用户</el-tag\n            >\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"120px\">\n          <template slot-scope=\"scope\">\n            <!-- 修改按钮 -->\n            <el-button\n              type=\"primary\"\n              icon=\"el-icon-edit\"\n              size=\"small\"\n              @click=\"showEditDialog({ ...scope.row })\"\n            ></el-button>\n            <!-- 删除按钮 -->\n            <el-button\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              size=\"small\"\n              @click=\"removeUserById(scope.row.uid)\"\n            ></el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页区域 -->\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"queryInfo.pagenum\"\n        :page-sizes=\"[1, 2, 5, 10]\"\n        :page-size=\"queryInfo.pagesize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n      >\n      </el-pagination>\n    </el-card>\n\n    <!-- 添加用户对话框 -->\n    <el-dialog\n      title=\"添加用户\"\n      :visible.sync=\"dialogVisible\"\n      width=\"50%\"\n      @close=\"addDialogClosed\"\n    >\n      <!-- 内容主体区 -->\n      <el-form\n        :model=\"addForm\"\n        :rules=\"addFormRules\"\n        ref=\"addFormRef\"\n        label-width=\"70px\"\n      >\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"addForm.username\"></el-input>\n        </el-form-item>\n        <!-- <el-form-item label=\"昵称\" prop=\"realName\">\n          <el-input v-model=\"addForm.realName\"></el-input>\n        </el-form-item> -->\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"addForm.password\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"addForm.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"手机\" prop=\"phone\">\n          <el-input v-model=\"addForm.phone\"></el-input>\n        </el-form-item>\n      </el-form>\n      <!-- 底部区域 -->\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 修改用户的对话框 -->\n    <el-dialog title=\"修改用户\" :visible.sync=\"editDialogVisible\" width=\"50%\">\n      <el-form\n        :model=\"editForm\"\n        :rules=\"editFormRules\"\n        ref=\"editFormRef\"\n        label-width=\"70px\"\n      >\n        <el-form-item label=\"用户名\">\n          <el-input v-model=\"editForm.username\"></el-input>\n        </el-form-item>\n        <!-- <el-form-item label=\"姓名\">\n          <el-input v-model=\"editForm.realName\"></el-input>\n        </el-form-item> -->\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"editForm.password\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"editForm.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"手机号\" prop=\"phone\">\n          <el-input v-model=\"editForm.phone\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editUserInfo()\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n<script>\nimport {\n  getAllUser,\n  register,\n  updataInfoByAdmin,\n  deleteUser,\n} from '@/api/services/backstage.services';\nimport { mapState } from 'vuex';\nexport default {\n  data() {\n    // 验证手机号\n    const checkMobile = (rule, value, cb) => {\n      const regMobile =\n        /^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$/;\n      if (regMobile.test(value)) {\n        return cb();\n      }\n      cb(new Error('请输入合法的手机号'));\n    };\n    return {\n      // 获取用户列表的参数对象\n      queryInfo: {\n        query: '',\n        // 当前页数\n        pagenum: 1,\n        // 当前每页显示多少条数据\n        pagesize: 5,\n      },\n      userlist: [],\n      total: 0,\n      role: false,\n      // 控制用户对话框显示与隐藏\n      dialogVisible: false,\n      // 添加用户的表单数据\n      addForm: {\n        username: '',\n        password: '',\n        email: '',\n        phone: '',\n        // realName: '',\n        // timestamp: new Date().getTime()\n      },\n      // 添加表单验证规则对象\n      addFormRules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' },\n          { min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur' },\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          {\n            min: 6,\n            max: 15,\n            message: '长度在 6 到 15 个字符',\n            trigger: 'blur',\n          },\n        ],\n        email: [\n          { required: true, message: '请输入邮箱地址', trigger: 'blur' },\n          {\n            type: 'email',\n            message: '请输入正确的邮箱地址',\n            trigger: 'blur',\n          },\n        ],\n        phone: [\n          { required: true, message: '请输入手机号', trigger: 'blur' },\n          { validator: checkMobile, trigger: 'blur' },\n        ],\n      },\n      // 控制修改用户对话框的显示与隐藏\n      editDialogVisible: false,\n      // 查询到的用户信息对象\n      editForm: {},\n      // 修改表单的验证规则对象\n      editFormRules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' },\n          { min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur' },\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          {\n            min: 6,\n            max: 15,\n            message: '长度在 6 到 15 个字符',\n            trigger: 'blur',\n          },\n        ],\n        email: [\n          { required: true, message: '请输入邮箱地址', trigger: 'blur' },\n          {\n            type: 'email',\n            message: '请输入正确的邮箱地址',\n            trigger: 'blur',\n          },\n        ],\n        phone: [\n          { required: true, message: '请输入手机号', trigger: 'blur' },\n          { validator: checkMobile, trigger: 'blur' },\n        ],\n      },\n    };\n  },\n  computed: {\n    ...mapState(['user', 'token']),\n  },\n  methods: {\n    // 请求用户数据\n    async queryUser() {\n      const data = await getAllUser(this.user.uid, this.token);\n      if (data.status === 200) {\n        this.$message.success('获取数据成功！');\n      }\n      console.log(data);\n      this.userlist = [\n        ...data.data.filter((item) => item.username !== this.user.username),\n      ];\n      this.total = data.data.length;\n    },\n    // 初始化展示\n    async getUserList() {\n      await this.queryUser();\n      this.changeUserList(0, this.queryInfo.pagesize);\n      this.queryInfo.pagenum = 1;\n    },\n    // 拆封数组\n    changeUserList(begin, end) {\n      if (end > this.userlist.length) {\n        end = this.userlist.length;\n      }\n      this.userlist = this.userlist.slice(begin, end);\n    },\n    // 监听 pagesize 改变的事件\n    async handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize;\n      this.queryInfo.pagenum = 1;\n      await this.queryUser();\n      this.changeUserList(0, newSize);\n    },\n    // 监听 页码值 改变的事件\n    async handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage;\n      await this.queryUser();\n      const begin = this.queryInfo.pagesize * (newPage - 1);\n      const end = this.queryInfo.pagesize * newPage;\n      this.changeUserList(begin, end);\n    },\n    // 监听添加用户对话框的关闭事件\n    addDialogClosed() {\n      this.$refs.addFormRef.resetFields();\n    },\n    // 点击添加用户\n    addUser() {\n      this.$refs.addFormRef.validate(async (valid) => {\n        if (!valid) return;\n        // 发起网络请求\n        const data = await register(this.addForm);\n        if (data.msg.errno === 1062) {\n          return this.$message.error('用户或者手机号已被注册!');\n        }\n        if (data.status === 40001) {\n          return this.$message.warning('服务器错误，请稍候再试！');\n        }\n        this.$message.success('添加用户成功！');\n        // 隐藏添加用户的对话框\n        this.dialogVisible = false;\n        // 重新获取用户列表\n        this.getUserList();\n      });\n    },\n    // 展示编辑用户的对话框\n    showEditDialog(data) {\n      this.editForm = data;\n      this.editDialogVisible = true;\n    },\n    // 修改用户信息并提交\n    editUserInfo() {\n      this.$refs.editFormRef.validate(async (valid) => {\n        if (!valid) return;\n        const data = await updataInfoByAdmin(\n          window.localStorage.getItem('token'),\n          // this.editForm.registrationTime,\n          this.user.uid,\n          this.user.password,\n          this.user.username,\n          this.editForm,\n        );\n        console.log(data);\n        if (data.status !== 200) return this.$message.error('更改用户信息失败');\n        // 关闭对话框\n        this.editDialogVisible = false;\n        // 刷新数据列表\n        this.handleCurrentChange(this.queryInfo.pagenum);\n        // 提示修改成功\n        this.$message.success('更新用户信息成功！');\n      });\n    },\n    // 查找用户\n    async searchList() {\n      await this.queryUser();\n      this.userlist = this.userlist.filter((item) => {\n        if (item.username.indexOf(this.queryInfo.query) !== -1) return true;\n        return false;\n      });\n    },\n    // 根据 id 删除用户信息\n    async removeUserById(uid) {\n      // 弹窗询问用户是否删除数据\n      const confirmResult = await this.$confirm(\n        '此操作将永久删除该用户, 是否继续?',\n        '提示',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning',\n        },\n      ).catch((err) => err);\n\n      // 如果用户确认删除，则返回字符串 confirm\n      // 如果用户取消删除，则返回字符串 cancel\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消删除');\n      }\n      const res = await deleteUser(uid);\n      if (res.status === 200) {\n        this.$message.success(res.data);\n      } else {\n        return this.$message.error('删除用户失败');\n      }\n      this.getUserList();\n    },\n  },\n  created() {\n    this.getUserList();\n  },\n};\n</script>\n<style lang=\"less\" scoped>\n.tag-width {\n  width: 70px;\n  text-align: center;\n}\n\n.el-table {\n  margin-top: 15px;\n  font-size: 12px;\n}\n\n.el-pagination {\n  margin-top: 15px;\n}\n\n.el-tag {\n  margin: 0 25%;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./UserManagement.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./UserManagement.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./UserManagement.vue?vue&type=template&id=56e60dec&scoped=true&\"\nimport script from \"./UserManagement.vue?vue&type=script&lang=js&\"\nexport * from \"./UserManagement.vue?vue&type=script&lang=js&\"\nimport style0 from \"./UserManagement.vue?vue&type=style&index=0&id=56e60dec&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"56e60dec\",\n  null\n  \n)\n\nexport default component.exports","import { post } from '../request'\n// 后台首页数据接口\nexport const getAllData = () => {\n  return post('/getAllData')\n}\n\n// 请求用户数据接口\nexport const getAllUser = (uid, token) => {\n  return post('/getAllUser', {\n    uid,\n    token\n  })\n}\n\n// 添加用户接口\nexport const register = (form) => {\n  return post('/register', form)\n}\n\n// 后台修改用户信息接口\nexport const updataInfoByAdmin = (\n  token,\n  adminId,\n  adminPwd,\n  adminUser,\n  {\n    email,\n    password,\n    phone,\n    role,\n    uid,\n    username\n  }\n) => {\n  return post('updataInfoByAdmin', {\n    email,\n    password,\n    phone,\n    role,\n    uid,\n    username,\n    token,\n    adminId,\n    adminPwd,\n    adminUser\n  })\n}\n\n// 删除用户接口\nexport const deleteUser = (uid) => {\n  return post('/deleteUser', { uid })\n}\n\n// 回收站删除板块接口\nexport const removeFromRecycle = (sid, pid) => {\n  return post('removeFromRecycle', { sid, pid })\n}\n// 回收站得到板块接口\nexport const getAllRecycle = () => {\n  return post('getAllRecycle')\n}\n// 回收恢复帖子接口\nexport const recover = (sid, pid) => {\n  return post('recover', { sid, pid })\n}\n\n// 删除板块接口\nexport const delectSection = (sid) => {\n  return post('delectSection', { sid })\n}\n\n// 添加板块接口\nexport const addSection = (row) => {\n  return post('addSection', row)\n}\n\n// 获取所有板块信息接口\nexport const getAllSection = () => {\n  return post('getAllSections')\n}\n\n// 获取所有帖子息接口\nexport const getAllPost = () => {\n  return post('getAllPost')\n}\n// 帖子修改接口\nexport const updatePost = (row) => {\n  return post('updatePost', row)\n}\n\n// 删除帖子接口\nexport const goToRecycle = (sid, pid) => {\n  return post('goToRecycle', { sid, pid })\n}\n// 取消帖子接口\nexport const noneRecycle = (uid, pid) => {\n  return post('noneRecycle', { uid, pid })\n}\n"],"names":["render","_vm","this","_c","_self","attrs","path","_v","on","getUserList","model","value","queryInfo","query","callback","$$v","$set","expression","searchList","slot","$event","dialogVisible","userlist","scopedSlots","_u","key","fn","scope","row","role","staticClass","showEditDialog","removeUserById","uid","pagenum","pagesize","total","handleSizeChange","handleCurrentChange","addDialogClosed","ref","addForm","addFormRules","username","password","email","phone","addUser","editDialogVisible","editForm","editFormRules","editUserInfo","staticRenderFns","data","cb","required","message","trigger","min","max","type","validator","computed","methods","console","changeUserList","end","window","confirmButtonText","cancelButtonText","created","component","getAllData","post","getAllUser","token","register","form","updataInfoByAdmin","adminId","adminPwd","adminUser","deleteUser","delectSection","sid","addSection","getAllSection","getAllPost","updatePost","goToRecycle","pid","noneRecycle"],"sourceRoot":""}