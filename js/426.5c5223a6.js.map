{"version":3,"file":"js/426.5c5223a6.js","mappings":"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","sources":["webpack://chinese_myths/./src/views/backstage/BgHome.vue","webpack://chinese_myths/src/views/backstage/BgHome.vue","webpack://chinese_myths/./src/views/backstage/BgHome.vue?fc45","webpack://chinese_myths/./src/views/backstage/BgHome.vue?8d8f","webpack://chinese_myths/./src/api/services/backstage.services.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"home-up\"},[_c('el-card',[_c('h4',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"本周访客\")]),_c('div',{attrs:{\"id\":\"visitor\"}})]),_c('el-card',[_c('h4',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"帖子数量\")]),_c('div',{attrs:{\"id\":\"amount\"}})]),_c('el-card',[_c('h4',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"新增用户\")]),_c('div',{attrs:{\"id\":\"newUser\"}})]),_c('el-card',[_c('h4',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"板块访问量\")]),_c('div',{attrs:{\"id\":\"plate-visits\"}})])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <!-- 上半部分 -->\n  <div class=\"home-up\">\n    <!-- 本周访客 -->\n    <el-card>\n      <h4 slot=\"header\">本周访客</h4>\n      <div id=\"visitor\"></div>\n    </el-card>\n    <!-- 发帖数量 -->\n    <el-card>\n      <h4 slot=\"header\">帖子数量</h4>\n      <div id=\"amount\"></div>\n    </el-card>\n    <!-- 新增用户 -->\n    <el-card>\n      <h4 slot=\"header\">新增用户</h4>\n      <div id=\"newUser\"></div>\n    </el-card>\n    <!-- 板块访问量 -->\n    <el-card>\n      <h4 slot=\"header\">板块访问量</h4>\n      <div id=\"plate-visits\"></div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { getAllData } from '@/api/services/backstage.services';\nexport default {\n  data() {\n    return {\n      visitor: '',\n      amount: '',\n      newUser: '',\n      plateVisits: '',\n    };\n  },\n  methods: {\n    // 柱状图\n    drawColChart() {\n      this.visitor = this.$echarts.init(document.getElementById('visitor'));\n      this.visitor.setOption({\n        xAxis: {\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n        },\n        yAxis: {},\n        series: [\n          {\n            type: 'bar',\n            data: [],\n            label: {\n              show: true,\n              position: 'top',\n              color: '#333',\n              fontSize: '12px',\n              formatter: (params) => {\n                return params.value[params.encode.x[0]];\n              },\n            },\n          },\n        ],\n      });\n    },\n    // 饼状图\n    drawPieChart() {\n      // 发帖数量\n      this.amount = this.$echarts.init(document.getElementById('amount'));\n      this.amount.setOption({\n        // 具体点击某一项触发的样式内容\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c} ({d}%)',\n        },\n        // 左上侧分类条形符\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: [],\n        },\n        // 饼状图类型以及数据源\n        series: [\n          {\n            name: '统计数量',\n            type: 'pie',\n            data: [],\n            // 设置饼状图扇形区域的样式\n            emphasis: {\n              itemStyle: {\n                emphasis: {\n                  shadowBlur: 10,\n                  shadowOffsetX: 0,\n                  shadowColor: 'rgba(0, 0, 0, 0.5)',\n                },\n              },\n            },\n          },\n        ],\n      });\n    },\n    // 曲线图\n    drawLineChart() {\n      this.newUser = this.$echarts.init(document.getElementById('newUser'));\n      this.newUser.setOption({\n        tooltip: {\n          trigger: 'axis',\n        },\n        xAxis: {\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n        },\n        yAxis: {},\n        series: [\n          {\n            name: '新增用户',\n            type: 'line',\n            data: [],\n            smooth: true,\n          },\n        ],\n      });\n    },\n    // 玫瑰图\n    drawRoseChart() {\n      this.plateVisits = this.$echarts.init(\n        document.getElementById('plate-visits'),\n      );\n      this.plateVisits.setOption({\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c} ({d}%)',\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          type: 'scroll',\n          data: [],\n        },\n        series: [\n          {\n            name: '访问量',\n            type: 'pie',\n            data: [],\n            roseType: 'radius',\n            selecteMode: 'nultiple',\n            selectedOffset: 20,\n          },\n        ],\n        // 设置饼状图扇形区域的样式\n        emphasis: {\n          itemStyle: {\n            emphasis: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)',\n            },\n          },\n        },\n      });\n    },\n    // 动态获取饼状图数据\n    async initPieData() {\n      const data = await getAllData();\n      console.log(data, 1);\n      if (data.status === 200) {\n        this.$message.success('获取数据成功！');\n      }\n      if (!data.data) return this.$message.error('服务器错误！');\n      // 柱状图数据\n      const {\n        fri: vFri,\n        mon: vMon,\n        sat: vSat,\n        sun: vSun,\n        thu: vThu,\n        tue: vTue,\n        wed: vWed,\n      } = data.data.viewsOfTheWeek;\n      this.visitor.setOption({\n        series: {\n          data: [vMon, vTue, vWed, vThu, vFri, vSat, vSun],\n        },\n      });\n      console.log([vMon, vTue, vWed, vThu, vFri, vSat, vSun]);\n\n      // 饼状图数据\n      const { creation, hero, natural } = data.data.pageView;\n      this.amount.setOption({\n        legend: {\n          data: [\n            {\n              value: 1,\n              name: '创世神话',\n            },\n            {\n              value: 1,\n              name: '英雄神话',\n            },\n            {\n              value: 1,\n              name: '自然神话',\n            },\n          ],\n        },\n        series: {\n          data: [\n            {\n              value: creation,\n              name: '创世神话',\n            },\n            {\n              value: hero,\n              name: '英雄神话',\n            },\n            {\n              value: natural,\n              name: '自然神话',\n            },\n          ],\n        },\n      });\n\n      // 曲线图数据\n      const {\n        fri: uFri,\n        mon: uMon,\n        sat: uSat,\n        sun: uSun,\n        thu: uThu,\n        tue: uTue,\n        wed: uWed,\n      } = data.data.userRegistrations;\n      this.newUser.setOption({\n        series: {\n          data: [uMon, uTue, uWed, uThu, uFri, uSat, uSun],\n        },\n      });\n\n      // 玫瑰图数据\n      const {\n        creation: pCreation,\n        hero: pHero,\n        natural: pNatural,\n      } = data.data.postNum;\n      this.plateVisits.setOption({\n        legend: {\n          data: [\n            {\n              value: 1,\n              name: '创世神话',\n            },\n            {\n              value: 1,\n              name: '英雄神话',\n            },\n            {\n              value: 1,\n              name: '自然神话',\n            },\n          ],\n        },\n        series: {\n          data: [\n            {\n              value: pCreation,\n              name: '创世神话',\n            },\n            {\n              value: pHero,\n              name: '英雄神话',\n            },\n            {\n              value: pNatural,\n              name: '自然神话',\n            },\n          ],\n        },\n      });\n    },\n    drawCharts() {\n      // 绘画柱状图\n      this.drawColChart();\n      // 绘画饼状图\n      this.drawPieChart();\n      // 绘画曲线图\n      this.drawLineChart();\n      // 绘画玫瑰图\n      this.drawRoseChart();\n    },\n  },\n  mounted() {\n    this.drawCharts();\n  },\n  created() {\n    this.initPieData();\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.home-up {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  height: 100%;\n  .el-card {\n    width: 48%;\n    min-width: 400px;\n    margin-bottom: 10px;\n    h4 {\n      margin: 0;\n    }\n  }\n}\n#amount,\n#visitor,\n#newUser,\n#plate-visits {\n  height: 200px;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./BgHome.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./BgHome.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BgHome.vue?vue&type=template&id=6e72b93e&scoped=true&\"\nimport script from \"./BgHome.vue?vue&type=script&lang=js&\"\nexport * from \"./BgHome.vue?vue&type=script&lang=js&\"\nimport style0 from \"./BgHome.vue?vue&type=style&index=0&id=6e72b93e&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6e72b93e\",\n  null\n  \n)\n\nexport default component.exports","import { post } from '../request'\n// 后台首页数据接口\nexport const getAllData = () => {\n  return post('/getAllData')\n}\n\n// 请求用户数据接口\nexport const getAllUser = (uid, token) => {\n  return post('/getAllUser', {\n    uid,\n    token\n  })\n}\n\n// 添加用户接口\nexport const register = (form) => {\n  return post('/register', form)\n}\n\n// 后台修改用户信息接口\nexport const updataInfoByAdmin = (\n  token,\n  adminId,\n  adminPwd,\n  adminUser,\n  {\n    email,\n    password,\n    phone,\n    role,\n    uid,\n    username\n  }\n) => {\n  return post('updataInfoByAdmin', {\n    email,\n    password,\n    phone,\n    role,\n    uid,\n    username,\n    token,\n    adminId,\n    adminPwd,\n    adminUser\n  })\n}\n\n// 删除用户接口\nexport const deleteUser = (uid) => {\n  return post('/deleteUser', { uid })\n}\n\n// 回收站删除板块接口\nexport const removeFromRecycle = (sid, pid) => {\n  return post('removeFromRecycle', { sid, pid })\n}\n// 回收站得到板块接口\nexport const getAllRecycle = () => {\n  return post('getAllRecycle')\n}\n// 回收恢复帖子接口\nexport const recover = (sid, pid) => {\n  return post('recover', { sid, pid })\n}\n\n// 删除板块接口\nexport const delectSection = (sid) => {\n  return post('delectSection', { sid })\n}\n\n// 添加板块接口\nexport const addSection = (row) => {\n  return post('addSection', row)\n}\n\n// 获取所有板块信息接口\nexport const getAllSection = () => {\n  return post('getAllSections')\n}\n\n// 获取所有帖子息接口\nexport const getAllPost = () => {\n  return post('getAllPost')\n}\n// 帖子修改接口\nexport const updatePost = (row) => {\n  return post('updatePost', row)\n}\n\n// 删除帖子接口\nexport const goToRecycle = (sid, pid) => {\n  return post('goToRecycle', { sid, pid })\n}\n// 取消帖子接口\nexport const noneRecycle = (uid, pid) => {\n  return post('noneRecycle', { uid, pid })\n}\n"],"names":["render","_vm","this","_c","_self","staticClass","attrs","slot","_v","staticRenderFns","data","visitor","amount","newUser","plateVisits","methods","drawColChart","xAxis","yAxis","series","type","label","show","position","color","fontSize","formatter","drawPieChart","tooltip","trigger","legend","orient","left","name","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","drawLineChart","smooth","drawRoseChart","document","roseType","selecteMode","selectedOffset","console","fri","mon","sat","sun","thu","tue","wed","creation","hero","natural","value","drawCharts","mounted","created","component","getAllData","post","getAllUser","uid","token","register","form","updataInfoByAdmin","adminId","adminPwd","adminUser","email","password","phone","role","username","deleteUser","delectSection","sid","addSection","row","getAllSection","getAllPost","updatePost","goToRecycle","pid","noneRecycle"],"sourceRoot":""}