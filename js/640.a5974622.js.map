{"version":3,"file":"js/640.a5974622.js","mappings":"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","sources":["webpack://chinese_myths/./src/views/user/UserInfo.vue","webpack://chinese_myths/src/views/user/UserInfo.vue","webpack://chinese_myths/./src/views/user/UserInfo.vue?07cb","webpack://chinese_myths/./src/views/user/UserInfo.vue?c881"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-form',{ref:\"form\",attrs:{\"model\":_vm.user,\"rules\":_vm.rules,\"label-width\":\"80px\"}},[_c('h2',{staticClass:\"Info-title\"},[_vm._v(\"我的资料\")]),_c('img',{attrs:{\"src\":_vm.$store.state.user.portrait,\"alt\":\"\"}}),_c('el-form-item',{attrs:{\"label\":\"用户名:\",\"prop\":\"username\"}},[_c('el-input',{staticClass:\"min-width\",attrs:{\"placeholder\":\"你的昵称\"},model:{value:(_vm.user.username),callback:function ($$v) {_vm.$set(_vm.user, \"username\", $$v)},expression:\"user.username\"}})],1),_c('el-form-item',{attrs:{\"label\":\"手机号:\",\"prop\":\"phone\"}},[_c('el-input',{staticClass:\"min-width\",attrs:{\"placeholder\":\"你的手机号\"},model:{value:(_vm.user.phone),callback:function ($$v) {_vm.$set(_vm.user, \"phone\", $$v)},expression:\"user.phone\"}})],1),_c('el-form-item',{attrs:{\"label\":\"邮箱:\",\"prop\":\"email\"}},[_c('el-input',{staticClass:\"min-width\",attrs:{\"placeholder\":\"你的邮箱\"},model:{value:(_vm.user.email),callback:function ($$v) {_vm.$set(_vm.user, \"email\", $$v)},expression:\"user.email\"}})],1),_c('el-form-item',{attrs:{\"label\":\"我的签名:\"}},[_c('el-input',{staticClass:\"textarea\",attrs:{\"type\":\"textarea\",\"rows\":\"4\",\"maxlength\":\"30\",\"show-word-limit\":\"\",\"placeholder\":\"填写简介让大家更容易认识自己(๑╹ヮ╹๑)ﾉ\",\"resize\":\"none\",\"size\":\"medium\"},model:{value:(_vm.user.introduction),callback:function ($$v) {_vm.$set(_vm.user, \"introduction\", $$v)},expression:\"user.introduction\"}})],1),_c('el-divider'),_c('el-button',{staticClass:\"user-info-save\",attrs:{\"type\":\"primary\",\"disabled\":_vm.disabled},on:{\"click\":_vm.updateInfo}},[_vm._v(\"保存\")])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <!-- 用户信息表单 -->\n    <el-form\n      ref=\"form\"\n      :model=\"user\"\n      :rules=\"rules\"\n      label-width=\"80px\">\n      <h2 class=\"Info-title\">我的资料</h2>\n      <img :src=\"$store.state.user.portrait\" alt=\"\">\n      <el-form-item label=\"用户名:\" prop=\"username\">\n        <el-input class=\"min-width\" v-model=\"user.username\" placeholder=\"你的昵称\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"手机号:\" prop=\"phone\">\n        <el-input class=\"min-width\" placeholder=\"你的手机号\" v-model=\"user.phone\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"邮箱:\" prop=\"email\">\n        <el-input class=\"min-width\" placeholder=\"你的邮箱\" v-model=\"user.email\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"我的签名:\">\n        <el-input\n          type=\"textarea\"\n          rows=\"4\"\n          maxlength=\"30\"\n          show-word-limit\n          placeholder=\"填写简介让大家更容易认识自己(๑╹ヮ╹๑)ﾉ\"\n          v-model=\"user.introduction\"\n          resize=\"none\"\n          size=\"medium\"\n          class=\"textarea\">\n        </el-input>\n      </el-form-item>\n      <el-divider></el-divider>\n      <!-- 提交按钮 -->\n    <el-button\n      type=\"primary\"\n      class=\"user-info-save\"\n      @click=\"updateInfo\"\n      :disabled=\"disabled\">保存</el-button>\n    </el-form>\n</template>\n\n<script>\nimport { updateInfo, home } from '@/api/services/loginUser.services'\nexport default {\n  data () {\n    // 验证当前密码\n    const username = (rule, value, callback) => {\n      if (!value) return callback(new Error('用户名不能为空'))\n      callback()\n    }\n    // 验证手机号的规则\n    const checkPhone = (rule, value, callback) => {\n      if (!value) return callback(new Error('手机号不能为空'))\n      // 验证手机号的正则表达式\n      const regMobile = /^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$/\n      if (regMobile.test(value)) {\n        return callback()\n      }\n      callback(new Error('请输入合法的手机号'))\n    }\n    return {\n      // 表单验证规则\n      rules: {\n        username: [\n          { required: true, validator: username, trigger: 'blur' }\n        ],\n        phone: [\n          { required: true, validator: checkPhone, trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: '请输入邮箱地址', trigger: 'blur' },\n          { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\n        ]\n      },\n      // 用户信息绑定\n      user: {\n        phone: '',\n        username: '',\n        email: '',\n        introduction: ''\n      }\n    }\n  },\n  created () {\n    const token = window.localStorage.getItem('token')\n    if (!token) return\n    this.updateUser(token)\n  },\n  methods: {\n    async updateUser (token) {\n      const data = await home(token)\n      console.log(data,987);\n      if (!data.data) return\n      console.log(data.data,243);\n      this.$store.commit('loginUser', {\n        user: data.data,\n        token: localStorage.getItem('token')\n      })\n      this.user = { ...this.$store.state.user }\n      console.log(this.user,this.$store.state.user,675);\n      this.$message.success('获取信息成功')\n    },\n    updateInfo () {\n      this.$refs.form.validate(async valid => {\n        // 判空\n        if (!valid) return\n        this.user.token = this.$store.state.token\n        if(!this.user.introduction) {\n          delete this.user.introduction\n        }\n        // 发送请求\n        // if (this.user.registrationTime) {\n        //   this.user.timestamp = this.user.registrationTime\n        //   delete this.user.registrationTime\n        // }\n        console.log(this.user)\n        const data = await updateInfo(this.user)\n        console.log(data.data)\n        if (!data.data && data.state !== 200) return this.$message.error('修改信息失败')\n        // 更新信息\n        // delete this.user.token\n        this.$store.commit('updateInfo', this.user)\n        this.$message.success('修改信息成功')\n      })\n    }\n  },\n  computed: {\n    // 提交是否禁用\n    disabled () {\n      if (JSON.stringify(this.user) !== JSON.stringify(this.$store.state.user)) {\n        return false\n      }\n      return true\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n  img {\n    position: absolute;\n    top: 10%;\n    right: 10%;\n    width: 150px;\n    height: 150px;\n    border-radius: 50%;\n  }\n  .textarea {\n    width: 400px;\n  }\n  .min-width {\n    width: 300px;\n  }\n  .user-info-save {\n    display: block;\n    width: 100px;\n    margin: 100px auto 50px;\n  }\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./UserInfo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./UserInfo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./UserInfo.vue?vue&type=template&id=5f19dbfc&scoped=true&\"\nimport script from \"./UserInfo.vue?vue&type=script&lang=js&\"\nexport * from \"./UserInfo.vue?vue&type=script&lang=js&\"\nimport style0 from \"./UserInfo.vue?vue&type=style&index=0&id=5f19dbfc&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5f19dbfc\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","ref","attrs","user","rules","staticClass","_v","$store","state","portrait","model","value","username","callback","$$v","$set","expression","phone","email","introduction","disabled","on","updateInfo","staticRenderFns","data","required","validator","trigger","message","type","created","methods","console","token","computed","component"],"sourceRoot":""}