{"version":3,"file":"js/767.6771f87e.js","mappings":"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","sources":["webpack://chinese_myths/./src/views/backstage/PlateList.vue","webpack://chinese_myths/src/views/backstage/PlateList.vue","webpack://chinese_myths/./src/views/backstage/PlateList.vue?c480","webpack://chinese_myths/./src/views/backstage/PlateList.vue?60f7","webpack://chinese_myths/./src/api/services/backstage.services.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"box-container\"},[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/bghome' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"板块管理\")]),_c('el-breadcrumb-item',[_vm._v(\"板块列表\")])],1),_c('el-card',{staticClass:\"box-card\"},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData.filter(\n          (data) =>\n            !_vm.search ||\n            data.name.toLowerCase().includes(_vm.search.toLowerCase()) ||\n            data.detail.toLowerCase().includes(_vm.search.toLowerCase()),\n        ),\"default-sort\":{ prop: 'date', order: 'descending' }}},[_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"帖子板块\",\"align\":\"center\",\"sortable\":\"\",\"width\":\"180\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',{staticClass:\"name-wrapper\",attrs:{\"slot\":\"reference\"},slot:\"reference\"},[(scope.row.edit)?_c('el-input',{staticClass:\"username\",attrs:{\"placeholder\":\"帖子板块\"},model:{value:(scope.row.name),callback:function ($$v) {_vm.$set(scope.row, \"name\", $$v)},expression:\"scope.row.name\"}}):_vm._e(),(!scope.row.edit)?_c('span',{attrs:{\"size\":\"medium\"}},[_vm._v(_vm._s(scope.row.name))]):_vm._e()],1)]}}])}),_c('el-table-column',{attrs:{\"prop\":\"detail\",\"label\":\"板块详情\",\"align\":\"center\",\"width\":\"580\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.edit)?_c('el-input',{staticClass:\"plate\",attrs:{\"placeholder\":\"板块详情\"},model:{value:(scope.row.detail),callback:function ($$v) {_vm.$set(scope.row, \"detail\", $$v)},expression:\"scope.row.detail\"}}):_vm._e(),(!scope.row.edit)?_c('span',{staticStyle:{\"margin-left\":\"10px\"}},[_vm._v(_vm._s(scope.row.detail))]):_vm._e()]}}])}),_c('el-table-column',{attrs:{\"align\":\"right\",\"prop\":\"address\",\"formatter\":_vm.formatter},scopedSlots:_vm._u([{key:\"header\",fn:function(scope){return [_c('el-input',{attrs:{\"size\":\"mini\",\"clearable\":\"\",\"placeholder\":\"输入关键字搜索\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})]}},{key:\"default\",fn:function(scope){return [_c('el-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(!scope.row.edit),expression:\"!scope.row.edit\"}],attrs:{\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.PlateListEdit(scope.$index, scope.row)}}}),_c('el-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(!scope.row.edit),expression:\"!scope.row.edit\"}],attrs:{\"size\":\"mini\",\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.PlateListeDelete(scope.$index, scope.row.sid)}}}),_c('el-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(scope.row.edit),expression:\"scope.row.edit\"}],staticStyle:{\"margin-left\":\"0\"},attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.handleCancel(scope.$index, scope.row)}}},[_vm._v(\"取消\")]),_c('el-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(scope.row.edit),expression:\"scope.row.edit\"}],attrs:{\"disabled\":_vm.isDsabled,\"size\":\"mini\",\"type\":\"success\"},on:{\"click\":function($event){return _vm.handleSave(scope.$index, scope.row)}}},[_vm._v(\"保存\")])]}}])})],1),_c('div',{staticClass:\"block\",staticStyle:{\"text-align\":\"center\",\"margin-top\":\"15px\"}},[_c('el-button',{staticClass:\"add el-icon-plus\",attrs:{\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":_vm.PlateListAdd}},[_vm._v(\"添加\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"box-container\">\n    <!-- 面包屑导航区域 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/bghome' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>板块管理</el-breadcrumb-item>\n      <el-breadcrumb-item>板块列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 卡片视图区域 -->\n    <el-card class=\"box-card\">\n      <!-- 板块管理区域 -->\n      <el-table\n        :data=\"\n          tableData.filter(\n            (data) =>\n              !search ||\n              data.name.toLowerCase().includes(search.toLowerCase()) ||\n              data.detail.toLowerCase().includes(search.toLowerCase()),\n          )\n        \"\n        style=\"width: 100%\"\n        :default-sort=\"{ prop: 'date', order: 'descending' }\"\n      >\n        <!-- <el-table-column\n          prop=\"timestamp\"\n          label=\"日期\"\n          align=\"center\"\n          sortable\n          width=\"180\"\n        >\n          <template slot-scope=\"scope\">\n            <el-date-picker\n              v-if=\"scope.row.edit\"\n              v-model=\"scope.row.registerTime\"\n              align=\"right\"\n              type=\"date\"\n              placeholder=\"选择日期\"\n              :picker-options=\"pickerOptions\"\n            >\n            </el-date-picker>\n            <span style=\"margin-left: 10px\" v-if=\"!scope.row.edit\">{{\n              new Date(scope.row.registerTime).toLocaleString()\n            }}</span>\n          </template>\n        </el-table-column> -->\n        <!-- 板块 -->\n        <el-table-column\n          prop=\"name\"\n          label=\"帖子板块\"\n          align=\"center\"\n          sortable\n          width=\"180\"\n        >\n          <template slot-scope=\"scope\">\n            <div slot=\"reference\" class=\"name-wrapper\">\n              <el-input\n                class=\"username\"\n                placeholder=\"帖子板块\"\n                v-if=\"scope.row.edit\"\n                v-model=\"scope.row.name\"\n              ></el-input>\n              <span size=\"medium\" v-if=\"!scope.row.edit\">{{\n                scope.row.name\n              }}</span>\n            </div>\n          </template>\n        </el-table-column>\n        <!-- 详情 -->\n        <el-table-column\n          prop=\"detail\"\n          label=\"板块详情\"\n          align=\"center\"\n          width=\"580\"\n        >\n          <template slot-scope=\"scope\">\n            <el-input\n              class=\"plate\"\n              placeholder=\"板块详情\"\n              v-if=\"scope.row.edit\"\n              v-model=\"scope.row.detail\"\n            ></el-input>\n            <span style=\"margin-left: 10px\" v-if=\"!scope.row.edit\">{{\n              scope.row.detail\n            }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"right\" prop=\"address\" :formatter=\"formatter\">\n          <template slot=\"header\" slot-scope=\"scope\">\n            <el-input\n              v-model=\"search\"\n              size=\"mini\"\n              clearable\n              placeholder=\"输入关键字搜索\"\n            />\n          </template>\n          <template slot-scope=\"scope\">\n            <!-- 编辑 -->\n            <el-button\n              v-show=\"!scope.row.edit\"\n              size=\"mini\"\n              type=\"primary\"\n              @click=\"PlateListEdit(scope.$index, scope.row)\"\n              icon=\"el-icon-edit\"\n              circle\n            ></el-button>\n            <!-- 删除 -->\n            <el-button\n              v-show=\"!scope.row.edit\"\n              size=\"mini\"\n              @click=\"PlateListeDelete(scope.$index, scope.row.sid)\"\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              circle\n            ></el-button>\n            <!-- 取消 -->\n            <el-button\n              v-show=\"scope.row.edit\"\n              size=\"mini\"\n              @click=\"handleCancel(scope.$index, scope.row)\"\n              style=\"margin-left: 0\"\n              >取消</el-button\n            >\n            <!-- 保存 -->\n            <el-button\n              v-show=\"scope.row.edit\"\n              :disabled=\"isDsabled\"\n              size=\"mini\"\n              type=\"success\"\n              @click=\"handleSave(scope.$index, scope.row)\"\n              >保存</el-button\n            >\n          </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"block\" style=\"text-align: center; margin-top: 15px\">\n        <el-button\n          class=\"add el-icon-plus\"\n          type=\"primary\"\n          size=\"mini\"\n          @click=\"PlateListAdd\"\n          >添加</el-button\n        >\n      </div>\n    </el-card>\n  </div>\n</template>\n<script>\nimport {\n  delectSection,\n  addSection,\n  getAllSection,\n} from '@/api/services/backstage.services';\nexport default {\n  name: 'plate-list',\n  data() {\n    return {\n      tableData: [],\n      tableDataCopy: [],\n      newPlateList: {\n        sid: '',\n        // timestamp: new Date().getTime(),\n        name: '',\n        detail: '',\n        portrait: '',\n        edit: false,\n      },\n      search: '',\n      isDsabled: true,\n      index: 0,\n      // pickerOptions: {\n      //   disabledDate (time) {\n      //     return time.getTime() > Date.now().toLocaleString()\n      //   },\n      //   shortcuts: [\n      //     {\n      //       text: '今天',\n      //       onClick (picker) {\n      //         picker.$emit('pick', new Date().toLocaleString())\n      //       }\n      //     },\n      //     {\n      //       text: '昨天',\n      //       onClick (picker) {\n      //         const date = new Date()\n      //         date.setTime(date.getTime() - 3600 * 1000 * 24)\n      //         picker.$emit('pick', date.toLocaleString())\n      //       }\n      //     },\n      //     {\n      //       text: '一周前',\n      //       onClick (picker) {\n      //         const date = new Date()\n      //         date.setTime(date.getTime() - 3600 * 1000 * 24 * 7)\n      //         picker.$emit('pick', date.toLocaleString())\n      //       }\n      //     }\n      //   ]\n      // }\n    };\n  },\n  watch: {\n    tableData: {\n      deep: true,\n      handler(newValue, oldValue) {\n        console.log(\n          JSON.stringify(this.tableDataCopy) === JSON.stringify(oldValue),\n        );\n        if (JSON.stringify(this.tableDataCopy) === JSON.stringify(oldValue)) {\n          this.isDsabled = true;\n        } else {\n          this.isDsabled = false;\n        }\n      },\n    },\n  },\n  // 懒加载\n  created() {\n    const loading = this.$loading({\n      lock: true,\n      text: '数据加载中......',\n      spinner: 'el-icon-loading',\n      background: 'rgba(0, 0, 0, 0.7)',\n    });\n    setTimeout(() => {\n      loading.close();\n      this.getAllPlateSections();\n    }, 1000); /* 设置时间为1秒 */\n  },\n  // 控制详情展示文字\n  filters: {\n    ellipsis(value) {\n      if (!value) return '';\n      if (value.length > 10) {\n        return value.slice(0, 9) + '...';\n      }\n      return value;\n    },\n  },\n  methods: {\n    // 渲染\n    async getAllPlateSections() {\n      const res = await getAllSection();\n      const data = res;\n      data.data.forEach((temp) => {\n        temp.edit = false;\n        this.tableData.push(temp);\n        this.tableDataCopy.push({ ...temp });\n      });\n      console.log(this.tableData);\n    },\n    // 编辑\n    PlateListEdit(index, row) {\n      row.edit = true;\n      if (this.tableDataCopy[index]) {\n        this.tableDataCopy[index].edit = true;\n      }\n    },\n    // 增加\n    PlateListAdd(row) {\n      // const newPlateList = { ...this.newPlateList };\n      const index = this.tableData.length;\n      for (const i in this.tableData) {\n        if (i === index) break;\n        if (this.tableData[i].edit) {\n          this.$message.warning('请先保存信息');\n          return;\n        }\n      }\n      this.newPlateList.newList = 1;\n      this.tableData.push({ ...this.newPlateList });\n      this.tableDataCopy.push({ ...this.newPlateList });\n      this.PlateListEdit(index, this.tableData[index]);\n    },\n    // 删除\n    async PlateListeDelete(index, row) {\n      const confirmResult = await this.$confirm('确定要删除此板块吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      }).catch((err) => err);\n\n      // 如果用户确认删除，则返回字符串 confirm\n      // 如果用户取消删除，则返回字符串 cancel\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消删除');\n      }\n      const res = await delectSection(row);\n      if (res.status === 200) {\n        this.$message.success(res.data);\n        if (this.tableData.length !== 1) {\n          this.tableData.splice(index, 1);\n          this.tableDataCopy.splice(index, 1);\n        } else {\n          this.$alert('至少要添加一条信息，无法删除', {\n            confirmButtonText: '确定',\n            callback: () => {\n              this.$message.warning('对应信息不能为空！');\n            },\n          });\n        }\n      } else {\n        return this.$message.error('删除失败');\n      }\n    },\n    // 取消\n    handleCancel(index, row) {\n      // this.tableData.pop();\n      console.log(this.tableData[index].name, row.name);\n      if (row.newList) {\n        this.tableDataCopy.pop();\n        return this.tableData.pop();\n      }\n      if (this.tableDataCopy[index].name !== row.name) {\n        row.name = this.tableDataCopy[index].name;\n      }\n      if (this.tableDataCopy[index].detail !== row.detail) {\n        row.detail = this.tableDataCopy[index].detail;\n      }\n      row.edit = false;\n      this.tableDataCopy[index].edit = false;\n    },\n    // 保存\n    async handleSave(index, row) {\n      if (!this.tableDataCopy[index]) {\n        row.isInset = 1;\n      } else {\n        row.isInset = '';\n      }\n      // let c, b\n      // if (typeof row.registerTime === 'object') {\n      //   b = row.registerTime.toJSON().replace('T', ' ')\n      //   c = b.slice(0, 19)\n      // }\n      // if (typeof row.registerTime === 'string') {\n      //   while (row.registerTime.indexOf('/') !== -1) {\n      //     row.registerTime = row.registerTime.replace('/', '-')\n      //     console.log(c)\n      //   }\n      //   c = row.registerTime\n      // }\n      // console.log(c)\n      // row.registerTime = c\n\n      const res = await addSection(row);\n      console.log('123', res);\n      if (res.status === 200 && res.msg) {\n        row.edit = false;\n        this.tableDataCopy[index] = { ...row };\n        return this.$message.success(res.msg);\n      }\n      this.$message.error('添加失败');\n    },\n    formatter(row, column) {\n      return row.address;\n    },\n  },\n};\n</script>\n<style lang=\"less\" scoped>\n.box-container {\n  height: 100%;\n  min-width: 800px;\n}\n.el-breadcrumb {\n  margin-bottom: 15px;\n  font-size: 12px;\n}\n.text {\n  font-size: 14px;\n}\n\n.item {\n  padding: 10px 0;\n}\n\n.box-card {\n  width: 100%;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PlateList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PlateList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PlateList.vue?vue&type=template&id=54d72744&scoped=true&\"\nimport script from \"./PlateList.vue?vue&type=script&lang=js&\"\nexport * from \"./PlateList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PlateList.vue?vue&type=style&index=0&id=54d72744&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"54d72744\",\n  null\n  \n)\n\nexport default component.exports","import { post } from '../request'\n// 后台首页数据接口\nexport const getAllData = () => {\n  return post('/getAllData')\n}\n\n// 请求用户数据接口\nexport const getAllUser = (uid, token) => {\n  return post('/getAllUser', {\n    uid,\n    token\n  })\n}\n\n// 添加用户接口\nexport const register = (form) => {\n  return post('/register', form)\n}\n\n// 后台修改用户信息接口\nexport const updataInfoByAdmin = (\n  token,\n  adminId,\n  adminPwd,\n  adminUser,\n  {\n    email,\n    password,\n    phone,\n    role,\n    uid,\n    username\n  }\n) => {\n  return post('updataInfoByAdmin', {\n    email,\n    password,\n    phone,\n    role,\n    uid,\n    username,\n    token,\n    adminId,\n    adminPwd,\n    adminUser\n  })\n}\n\n// 删除用户接口\nexport const deleteUser = (uid) => {\n  return post('/deleteUser', { uid })\n}\n\n// 回收站删除板块接口\nexport const removeFromRecycle = (sid, pid) => {\n  return post('removeFromRecycle', { sid, pid })\n}\n// 回收站得到板块接口\nexport const getAllRecycle = () => {\n  return post('getAllRecycle')\n}\n// 回收恢复帖子接口\nexport const recover = (sid, pid) => {\n  return post('recover', { sid, pid })\n}\n\n// 删除板块接口\nexport const delectSection = (sid) => {\n  return post('delectSection', { sid })\n}\n\n// 添加板块接口\nexport const addSection = (row) => {\n  return post('addSection', row)\n}\n\n// 获取所有板块信息接口\nexport const getAllSection = () => {\n  return post('getAllSections')\n}\n\n// 获取所有帖子息接口\nexport const getAllPost = () => {\n  return post('getAllPost')\n}\n// 帖子修改接口\nexport const updatePost = (row) => {\n  return post('updatePost', row)\n}\n\n// 删除帖子接口\nexport const goToRecycle = (sid, pid) => {\n  return post('goToRecycle', { sid, pid })\n}\n// 取消帖子接口\nexport const noneRecycle = (uid, pid) => {\n  return post('noneRecycle', { uid, pid })\n}\n"],"names":["render","_vm","this","_c","_self","staticClass","attrs","path","_v","staticStyle","tableData","filter","data","search","name","toLowerCase","includes","detail","prop","order","scopedSlots","_u","key","fn","scope","slot","row","edit","model","value","callback","$$v","$set","expression","_e","_s","formatter","directives","rawName","on","$event","PlateListEdit","$index","PlateListeDelete","sid","handleCancel","isDsabled","handleSave","PlateListAdd","staticRenderFns","tableDataCopy","newPlateList","portrait","index","watch","deep","handler","console","JSON","created","lock","text","spinner","background","setTimeout","loading","filters","ellipsis","methods","temp","confirmButtonText","cancelButtonText","type","component","getAllData","post","getAllUser","uid","token","register","form","updataInfoByAdmin","adminId","adminPwd","adminUser","email","password","phone","role","username","deleteUser","delectSection","addSection","getAllSection","getAllPost","updatePost","goToRecycle","pid","noneRecycle"],"sourceRoot":""}